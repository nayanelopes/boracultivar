import React, { useRef, useState } from 'react';
import * as tmImage from '@teachablemachine/image';

const TeachableMachine: React.FC = () => {
  const [message, setMessage] = useState('');
  const webcamRef = useRef<HTMLVideoElement>(null);
  const modelURL = 'https://teachablemachine.withgoogle.com/models/04ijzUI11/';

  const init = async () => {
    const model = await tmImage.load(`${modelURL}model.json`, `${modelURL}metadata.json`);
    const webcam = new tmImage.Webcam(200, 200, true);
    await webcam.setup();
    await webcam.play();


    if (webcamRef.current) {
      webcamRef.current.srcObject = webcam.webcam.srcObject;
    }

    const loop = async () => {
      webcam.update();
      const prediction = await model.predict(webcam.canvas);
      prediction.sort((a, b) => b.probability - a.probability);
      const topPrediction = prediction[0];
      const mensagens: { [key: string]: string } = {
        'Apto para plantio': 'âœ… Este local estÃ¡ apto para plantio! Sua solicitaÃ§Ã£o foi registrada e serÃ¡ analisada por nossa equipe tÃ©cnica.',
        'CalÃ§ada estreita': 'ğŸš« A calÃ§ada tem menos de 1,90m. Isso impede o crescimento saudÃ¡vel da Ã¡rvore e a circulaÃ§Ã£o segura.',
        'ObstÃ¡culos urbanos': 'ğŸš« HÃ¡ muitos equipamentos urbanos no local, como postes, rampas ou entradas de garagem.',
        'Solo inadequado': 'ğŸš« O solo estÃ¡ muito compactado ou pavimentado. Isso prejudica o desenvolvimento da Ã¡rvore.',
        'Rua estreita': 'ğŸš« Ruas com menos de 7 metros nÃ£o podem ser arborizadas devido Ã  seguranÃ§a do trÃ¢nsito.',
        'FiaÃ§Ã£o elÃ©trica': 'ğŸš« HÃ¡ fiaÃ§Ã£o elÃ©trica de mÃ©dia/alta tensÃ£o. Plantio aqui nÃ£o Ã© permitido por seguranÃ§a.',
        'Sem Ã¡rea permeÃ¡vel': 'ğŸš« O local precisa ter solo permeÃ¡vel para infiltrar Ã¡gua e nutrir a Ã¡rvore.',
        'Muito prÃ³ximo de edificaÃ§Ãµes': 'ğŸš« A Ã¡rvore poderia causar danos estruturais a construÃ§Ãµes prÃ³ximas.',
      };
      setMessage(mensagens[topPrediction.className] || 'Resultado nÃ£o identificado. Tente novamente.');
      requestAnimationFrame(loop);
    };

    loop();
  };

  return (
    <div>
      <button onClick={init}>Iniciar VerificaÃ§Ã£o</button>
      <video ref={webcamRef} autoPlay playsInline width="200" height="200" />
      <p>{message}</p>
    </div>
  );
};

export default TeachableMachine;

